{
  "db_name": "SQLite",
  "query": "SELECT graph.graph_id as \"graph_id:Uuid\", graph.instance_id as \"instance_id:Uuid\", graph.status, graph.kickoff_txid,  graph.take1_txid, graph.take2_txid, graph.assert_init_txid, graph.assert_commit_txids, graph.assert_final_txid,  graph.challenge_txid, IFNULL(message_broadcast.msg_times, 0) as msg_times, IFNULL(message_broadcast.msg_type, '') as msg_type  FROM graph LEFT JOIN message_broadcast ON graph.graph_id =  message_broadcast.graph_id AND  graph.instance_id =  message_broadcast.instance_id AND message_broadcast.msg_type =  ?  WHERE  graph.status = ?",
  "describe": {
    "columns": [
      {
        "name": "graph_id:Uuid",
        "ordinal": 0,
        "type_info": "Text"
      },
      {
        "name": "instance_id:Uuid",
        "ordinal": 1,
        "type_info": "Text"
      },
      {
        "name": "status",
        "ordinal": 2,
        "type_info": "Text"
      },
      {
        "name": "kickoff_txid",
        "ordinal": 3,
        "type_info": "Text"
      },
      {
        "name": "take1_txid",
        "ordinal": 4,
        "type_info": "Text"
      },
      {
        "name": "take2_txid",
        "ordinal": 5,
        "type_info": "Text"
      },
      {
        "name": "assert_init_txid",
        "ordinal": 6,
        "type_info": "Text"
      },
      {
        "name": "assert_commit_txids",
        "ordinal": 7,
        "type_info": "Text"
      },
      {
        "name": "assert_final_txid",
        "ordinal": 8,
        "type_info": "Text"
      },
      {
        "name": "challenge_txid",
        "ordinal": 9,
        "type_info": "Text"
      },
      {
        "name": "msg_times",
        "ordinal": 10,
        "type_info": "Integer"
      },
      {
        "name": "msg_type",
        "ordinal": 11,
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Right": 2
    },
    "nullable": [
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      false,
      false
    ]
  },
  "hash": "0f2b70b979121b30155be45e74d286edabe842fbdbd306a4f6a8f194474c098a"
}
